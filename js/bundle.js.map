{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/Grid.js","js/Robot.js","js/game.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * Grid\n *\n */\n\nfunction Grid( sizeX, sizeY, enviroments, items ) {\n    var positions = [];\n    for( var x = 0; x < sizeX; x++ ) {\n        positions[ x ] = [];\n        for( var y = 0; y < sizeY; y++ ) {\n            positions[ x ][ y ] = new Position();\n        }\n    }\n\n    enviroments.forEach( function( enviroment ) {\n        positions[ enviroment.x ][ enviroment.y ] = enviroment;\n    } );\n    items.forEach( function( item ) {\n        positions[ item.x ][ item.y ] = item;\n    } );\n\n}\n\nfunction Position() {\n    var enviroment = null;\n    var item = null;\n    var robot = null;\n}\n\nmodule.exports = Grid;\n","/*\n * Robot\n *\n */\n\nvar DIRS = {\n    N: -1,\n    S: 1,\n    E: 1,\n    W: -1\n}\n\nfunction Robot() {\n    // Stats\n    var maxHealth = 100;\n    var maxPower = 100;\n    var speed = 10;\n    var attack = 10;\n\n    // State\n    var health = maxHealth;\n    var power = maxPower;\n    var position = {\n        x: 0,\n        y: 0\n    }\n    var direction = DIRS.S;\n    var axis = 'y';\n    var action = null;\n\n    // Actions\n    // move forward\n    // move backward\n    // turn left\n    // turn right\n    // attack\n    // self desctruct\n    // upgrade\n    // repair\n}\n\nRobot.prototype.move = function( direction ) {\n    this.position[ this.axis ] += this.speed * direction;\n}\nRobot.prototype.moveForward = function() {\n    this.move( this.direction );\n}\nRobot.prototype.moveBackward = function() {    \n    this.move( -this.direction );\n}\n\nRobot.prototype.turn = function( modifier ) {\n    if( this.axis == 'y' ) {\n        this.axis = 'x';\n        this.direction *= 1 * modifier;\n    }\n    else {\n        this.axis = 'y';\n        this.direction *= -1 * modifier;\n    }\n}\nRobot.prototype.turnLeft = function() {\n    this.turn( 1 );   \n}\nRobot.prototype.turnRight = function() {\n    this.turn( -1 );\n}\n\nRobot.prototype.attack = function() {\n    \n}\n\nRobot.prototype.selfDestruct = function() {\n    \n}\n\nmodule.exports = Robot;\n","var Grid = require( './Grid.js' );\nvar Robot = require( './Robot.js' );\n\nfunction init() {\n    var test = new Robot();\n    debugger\n    test.moveForward();\n    console.log( test );        \n}\n\ninit();\n"]}